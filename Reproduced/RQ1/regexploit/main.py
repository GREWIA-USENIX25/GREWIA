
import re
import sys
from regexploit.ast.sequence import Sequence
from regexploit.ast.sre import SreOpParser
from regexploit.redos import find
from regexploit.output.text import TextOutput


def from_regex(pattern: str, flags: int = 0) -> Sequence:
    return SreOpParser().parse_sre(pattern, flags)


def find_redos(pattern: str, flags: int = 0):
    return find(from_regex(pattern, flags))

def gen_attack_string(path: str):
    # 读取正则表达式
    with open(path, 'r') as f:
        pattern = f.read()
    id = re.findall(r'(\d+).txt', path)[0]
    output = TextOutput()
    rs = find_redos(pattern)
    # print(rs)
    # output.record(rs[0], pattern)
    if len(rs) == 0:
        return
    with open(f'Regexploit_AttackString/{id}.txt', 'w') as f:
        f.write(output.record(rs[0], pattern))

if __name__ == '__main__':
    # 如果没有Regexploit_AttackString文件夹，创建一个
    import os
    # if not os.path.exists('Regexploit_AttackString'):
    #     os.mkdir('Regexploit_AttackString')
    # 第一个命令行参数为文件路径
    gen_attack_string(sys.argv[1])






